#user  nobody;
user www-data;
worker_processes auto;
worker_rlimit_nofile 1048576;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;

events {
    worker_connections 81920;
    multi_accept on;
}

http {
    include mime.types;
    default_type application/octet-stream;
    server_names_hash_bucket_size 96;
    include upstream.conf;

    log_format json_combined
        escape=json
        '{'
        '"time":"$msec",'
        '"httpRequest":{'
        '"requestMethod":"$request_method",'
        '"requestUrl":"$scheme://$host$request_uri",'
        '"requestSize":$request_length,'
        '"status":"$status",'
        '"responseSize":$bytes_sent,'
        '"userAgent":"$http_user_agent",'
        '"remoteIp":"$remote_addr",'
        '"serverIp":"$server_addr",'
        '"referer":"$http_referer",'
        '"latency":"${request_time}s",'
        '"protocol":"$server_protocol",'
        '"range":"$http_range",'
        '"upstreamAddr":"$upstream_addr",'
        '"upstreamConnectTime":"$upstream_connect_time",'
        '"upstreamHeaderTime":"$upstream_header_time",'
        '"upstreamResponseTime":"$upstream_response_time"'
        '}'
        '}';
    access_log /var/log/nginx/access.log json_combined;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile on;
    sendfile_max_chunk 256k;
    tcp_nopush on;

    #keepalive_timeout  0;
    keepalive_timeout 620s;
    keepalive_requests 3600;
    proxy_read_timeout 5s;
    proxy_connect_timeout 5s;
    proxy_send_timeout 15s;
    send_timeout 15s;
    proxy_cache_path /localssd/cache/
        levels=1:2
        keys_zone=mem-cache:512m
        inactive=365d
        max_size=5500g
        use_temp_path=off;
    proxy_temp_path /localssd/cache/tmp;
    proxy_max_temp_file_size 2M;
    resolver 169.254.169.254 ipv6=off;

    server {
        listen 80 reuseport;
        location /xhs-cdn {
            proxy_buffering off;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_pass http://cache;
        }
        location /status {
            check_status;
            access_log off;
        }
    }
    server {
        listen 8080 reuseport;
        server_name nginx_cache;
        resolver 8.8.8.8;
        include origin.conf;
        location / {
            proxy_cache mem-cache;
            proxy_buffering on;
            proxy_ignore_headers Expires;
            proxy_ignore_headers X-Accel-Expires;
            proxy_ignore_headers Cache-Control;
            proxy_ignore_headers Set-Cookie;
            proxy_hide_header X-Accel-Expires;
            proxy_hide_header Expires;
            proxy_hide_header Cache-Control;
            proxy_hide_header Pragma;
            proxy_set_header Host $upstream_hostname;
            add_header X-Proxy-Cache $upstream_cache_status;
            add_header Cache-Control "public, max-age=25920001";
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            proxy_pass $upstream_endpoint$request_uri;
            slice 2097136;
            proxy_cache_key origin1$uri$slice_range;
            proxy_set_header Range $slice_range;
            proxy_cache_revalidate on;
            proxy_cache_valid 200 206 301 302 304 7d;
            proxy_cache_valid 403 404 5m;
            proxy_cache_use_stale invalid_header http_403 http_404 http_500 http_502;
            proxy_cache_lock on;
            proxy_cache_lock_timeout 5s;
            proxy_cache_bypass $http_cache_purge;
        }
    }
    server {
        listen 80;
        server_name local-stackdriver-agent.stackdriver.com;
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
        location / {
            root /dev/null;
        }
    }
    server {
        listen 8081;
        server_name ~^(.+)$;
        location / {
            access_log off;
            root /localssd;
        }
    }
}